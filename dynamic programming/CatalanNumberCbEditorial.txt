Problem Name : Catalan Numbers
Topic : DP
Difficulty : Medium
EXPLANATION
rThe first few Catalan numbers for n = 0, 1, 2, 3, â€¦ are 1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862, â€¦

Recursive Solution Catalan numbers satisfy the following recursive formula. C[0]=1,C[n+1]=sum(C[i]*C[n-i]) for all 0<=i<=n Following is the implementation of above recursive formula.

unsigned long int catalan(unsigned int n) 
{ 
    // Base case 
    if (n <= 1) return 1; 

    // catalan(n) is sum of catalan(i)*catalan(n-i-1) 
    unsigned long int res = 0; 
    for (int i=0; i<n; i++) 
        res += catalan(i)*catalan(n-i-1); 

    return res; 
} 
But the problem is time complexity would be exponential.We can observe that the above recursive implementation does a lot of repeated work (we can the same by drawing recursion tree). Since there are overlapping subproblems, we can use dynamic programming for this.

Time Complexity : O(N*NNâˆ—N).
#include<iostream> 
using namespace std; 

// A dynamic programming based function to find nth 
// Catalan number 
unsigned long int catalanDP(unsigned int n) 
{ 
    unsigned long int catalan[n+1]; 

    catalan[0] = catalan[1] = 1; 

    for (int i=2; i<=n; i++) 
    { 
        catalan[i] = 0; 
        for (int j=0; j<i; j++) 
            catalan[i] += catalan[j] * catalan[i-j-1]; 
    } 

    return catalan[n]; 
} 
int main(){
    unsigned int n;
    cin>>n;
    cout<<catalanDP(n)<<endl;
}
ðŸ’¡ Catalan Numbers
